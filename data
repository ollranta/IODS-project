# Olli Rantanen, 1.2.2017, Second exercise on R-Studio.
install.packages("dplyr")
install.packages("ggplot2")

library(dplyr)
# Olli Rantanen, 1.2.2017, Second exercise on R-Studio.
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)

# Data has 183 rows and 60 columns totally. 
dim(lrn14)

# This command explains the structure of the data,
# for example it shows all the answers for one person
# coded on integral form. Most questions are on likert-
# scale from 1 to 5.
str(lrn14)
 


lrn14$attitude <- lrn14$Attitude /10

#Then combine all the question related to subject deep, surface and strategic.
deep_questions <-  c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")



# Then calculate the mean of the matter on hand 

deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)

surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)

strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)


# We only wanted to keep columns with the variables gender, age, attitude, deep, stra, surf and points

keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")

lrn14_columns <- select(lrn14, one_of(keep_columns))




# Now we only have the wanted variables on our file and then we just remove the variables with the points > 0
lrn14_columns <- filter(lrn14_columns, Points > 0 )  

str(lrn14_columns)

# Done  "data.frame':	166 obs. of  7 variables"

# Then I needed to make the analysis save with csv. The last part is proof that it works. 


write.csv(lrn14_columns, file="Z:\\Documents\\tilastoi\\Opendatasciense\\IODS-project-master\\learning2014.csv", row.names = FALSE)


learning_2014 <- read.csv("Z:\\Documents\\tilastoi\\Opendatasciense\\IODS-project-master\\learning2014.csv")


str(learning_2014)

##data.frame':	166 obs. of  7 variables:
 #$ gender  : Factor w/ 2 levels "F","M": 1 2 1 2 2 1 2 1 2 1 ...
 #$ Age     : int  53 55 49 53 49 38 50 37 37 42 ...
 #$ attitude: num  3.7 3.1 2.5 3.5 3.7 3.8 3.5 2.9 3.8 2.1 ...
 #$ deep    : num  3.58 2.92 3.5 3.5 3.67 ...
 #$ stra    : num  3.38 2.75 3.62 3.12 3.62 ...
 #$ surf    : num  2.58 3.17 2.25 2.25 2.83 ...
 #$ Points  : int  25 12 24 10 22 21 21 31 24 26 ...

# Second exercise

# After the first exercise I was ready to start the second exercise which was about data analysis of the file we just created.


summary(learning_2014)
dim(learning_2014)

str(learning_2014)

summary(learning_2014)
install.packages("ggplot2")
library(ggplot2)
install.packages("GGally")
library(GGally)
# Starting the visualisation process

A1 <- ggplot(learning_2014, aes(x = attitude, y = Points, col = gender))
A2 <- A1 + geom_point()

A3 <- A2 + geom_smooth(method = "lm")

# We can also add a title to our data

A3_fig <- A3 + ggtitle("Relationship between attitude and points by gender") 

# Now it's time for the visualisation between the variables.


p <- ggpairs(learning_2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p

# When we check the data, we can see that with points correlate the most with attitude. However for the next
# exercise we need three variables as explanatory variables so we pick also deep and stra for the analysis.

ex3_model <- lm(Points ~ attitude + stra + deep, data = learning_2014)

summary(ex3_model)

# Deep does not seem to be significant factor explaining points so we can delete it.

ex3_model2 <- lm(Points ~ attitude + stra, data = learning_2014)

summary(ex3_model2)

# It seem that the points correlate most with the attitude and after that with stra variable.
# Finally it was time for the final exercise which is to make diagnostic plots of the data.

par(mfrow)


# draw diagnostic plots using the plot() function. Choose the plots 1, 2 and 5
par(mfrow = c(2,2))
plot(ex3_model2, which = c(1,2,5))

# After this we are done!
